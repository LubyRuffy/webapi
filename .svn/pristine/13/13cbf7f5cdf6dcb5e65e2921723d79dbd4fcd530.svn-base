class ApplicationController < ActionController::API
#  attr_accessor :sessions 
  
  @@session_cache = {}
  def initialize
    #session = {} # Define in initialize .
#    @@session_cache = {}
  end

  def update_session!(s)
    #@@session_cache[s] = Time.now 
    session[s] = Time.now 
  end
  
  def delete_session!(s)
    #@@session_cache.delete(s) 
    session[s] = nil 
  end

  # session_timeout?
  def session_timeout?
    session_info = request.query_parameters[:session]
    to_flag = true
    logger.info("session_cache = #{session[session_info]}")
    if session.key?(session_info)
      timeOut = Time.now - session[session_info]
      if timeOut < 5*60
        to_flag = false

        #if not timeout , update the time.
        session[session_info] = Time.now

        logger.info("timeOut < 5 min, update session to #{session[session_info]}")
      end
    end
    
    if to_flag
      delete_session!(session_info)
      render json: {err_code: 30000, err_msg: 'session timeout, relogin please'}
    end
  end

  def api_err(err_code, err_msg)
    render json: {err_code: err_code, err_msg:  err_msg}
    return
  end
end
